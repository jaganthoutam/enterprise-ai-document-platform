version: '3.8'

services:
  web-client:
    build:
      context: ./web-client
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    volumes:
      - ./web-client/src:/app/src
      - ./web-client/public:/app/public
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:3000/api
      - REACT_APP_WS_URL=ws://localhost:3000
    networks:
      - bedrock-network
    depends_on:
      - nginx
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - bedrock-network
    depends_on:
      - lambda-auth
      - lambda-documents
      - lambda-ai-service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  lambda-auth:
    build:
      context: ./lambda/auth
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=development
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - USER_POOL_ID=${USER_POOL_ID}
      - CLIENT_ID=${CLIENT_ID}
      - DYNAMODB_TABLE=${DYNAMODB_TABLE:-auth-table}
      - ACTIVITY_LOG_TABLE=${ACTIVITY_LOG_TABLE:-auth-activity-log}
    networks:
      - bedrock-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  lambda-documents:
    build:
      context: ./lambda/documents
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=development
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - DOCUMENTS_TABLE=${DOCUMENTS_TABLE:-documents-table}
      - S3_BUCKET=${S3_BUCKET:-bedrockai-documents}
      - EVENT_BUS_NAME=${EVENT_BUS_NAME:-bedrockai-events}
    networks:
      - bedrock-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  lambda-ai-service:
    build:
      context: ./lambda/ai-service
      dockerfile: Dockerfile
    environment:
      - PYTHONUNBUFFERED=1
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - KNOWLEDGE_BASE_ID=${KNOWLEDGE_BASE_ID}
      - DOCUMENT_BUCKET=${DOCUMENT_BUCKET}
      - DYNAMODB_TABLE=${DYNAMODB_TABLE:-ai-service-table}
      - MODEL_ID=${MODEL_ID:-anthropic.claude-3-sonnet-20240229-v1:0}
      - AGENT_ID=${AGENT_ID}
    networks:
      - bedrock-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  bedrock-network:
    driver: bridge 